version: '2'
catalog:
  name: "EEA - WWW"
  description: "European Environment Agency main website"
  version: "10.2-rancher1"
  uuid: "www-eea-0"
  minimum_rancher_version: "v1.2.0"
  questions:
  - variable: "KGS_VERSION"
    label: "KGS Version"
    description: "EEA KGS Version. Is this a development stack or a production one?"
    default: "devel"
    type: "enum"
    required: true
    options:
    - "10.2"
    - "devel"
  - variable: "SERVER_NAME"
    label: "Server name"
    description: "DNS name for this deployment"
    default: "test.eea.europa.eu"
    type: "string"
    required: true
  - variable: "FRONTEND_HOST_LABELS"
    label: "Schedule frontend services on hosts with the following host labels"
    description: "Comma separated list of host labels (e.g. key1=value1, key2=value2) to be used for scheduling frontend services (Apache, Varnish, HAProxy, Memcached)"
    default: "www=yes,frontend=yes"
    type: "string"
    required: true
  - variable: "BACKEND_HOST_LABELS"
    label: "Schedule backend services on hosts with the following host labels"
    description: "Comma separated list of host labels (e.g. key1=value1, key2=value2) to be used for scheduling backend services (Plone)"
    default: "www=yes,backend=yes"
    type: "string"
    required: true
  - variable: "VARNISH_CACHE_SIZE"
    label: "Varnish cache size"
    description: "Varnish cache size"
    type: "enum"
    default: "2G"
    options:
    - "2G"
    - "4G"
    - "8G"
  - variable: "WARMUP"
    label: "Warmup threshold"
    description: "Warmup threshold before serving requests from Plone backends"
    type: "int"
    default: 50000
  - variable: "GRAYLOG"
    label: "Graylog"
    description: "Provide graylog servername:port where to send logs"
    type: "string"
  - variable: "TRACEVIEW"
    label: "Traceview token"
    description: "Traceview token (production only)"
    type: "string"
  - variable: "POSTGRES"
    label: "PostgreSQL"
    description: "Select PostgreSQL DB backend"
    type: "service"
    default: "www-postgres/master"
    required: true
  - variable: "RABBITMQ_HOST"
    label: "RabbitMQ host"
    description: "Select RabbitMQ host name"
    type: "string"
    default: "rabbitmq.apps.eea.europa.eu"
  - variable: "RABBITMQ_USER"
    label: "RabbitMQ user"
    description: "RabbitMQ user name"
    type: "string"
  - variable: "RABBITMQ_PASS"
    label: "RabbitMQ password"
    description: "RabbitMQ password"
    type: "password"
  - variable: "POSTFIX_RELAY"
    label: "Postfix relay"
    description: "Postfix SMTP relay name"
    type: "string"
    default: "ironports.eea.europa.eu"
  - variable: "POSTFIX_PORT"
    label: "Postfix relay port"
    description: "Postfix SMTP relay port"
    type: "int"
    default: 8587
  - variable: "POSTFIX_USER"
    label: "Postfix user"
    description: "Postfix user name to connect to SMTP relay"
    type: "string"
  - variable: "POSTFIX_PASS"
    label: "Postfix password"
    description: "Postfix password to connect to SMTP relay"
    type: "password"
  - variable: "TZ"
    label: "Time zone"
    description: "Time zone"
    default: "Europe/Copenhagen"
    required: true
    type: "string"
  - variable: "SCALE"
    label: "Scale"
    description: "Initial number of Plone containers per backend service. Minimum recommended in production: 3"
    default: 1
    required: true
    type: "int"

services:
  apache:
    scale: 1
    health_check:
      port: 80
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 3000
  varnish:
    scale: 1
    health_check:
      port: 6081
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 3000
  anon:
    scale: 1
    health_check:
      port: 4242
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 3000
  auth:
    scale: 1
    health_check:
      port: 4242
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 3000
  download:
    scale: 1
    health_check:
      port: 4242
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      healthy_threshold: 2
      response_timeout: 3000
  anon-instance:
    scale: ${SCALE}
    health_check:
      port: 8080
      interval: 60000
      initializing_timeout: 900000
      unhealthy_threshold: 5
      strategy: recreate
      request_line: GET "/health.check" "HTTP/1.0"
      response_timeout: 15000
      healthy_threshold: 1
  download-instance:
    scale: ${SCALE}
    health_check:
      port: 8080
      interval: 60000
      initializing_timeout: 900000
      unhealthy_threshold: 5
      strategy: recreate
      request_line: GET "/health.check" "HTTP/1.0"
      response_timeout: 15000
      healthy_threshold: 1
  auth-instance:
    scale: ${SCALE}
    health_check:
      port: 8080
      interval: 60000
      initializing_timeout: 900000
      unhealthy_threshold: 5
      strategy: recreate
      request_line: GET "/health.check" "HTTP/1.0"
      response_timeout: 15000
      healthy_threshold: 1
  async-instance:
    scale: ${SCALE}
    health_check:
      port: 8080
      interval: 60000
      initializing_timeout: 900000
      unhealthy_threshold: 5
      strategy: recreate
      request_line: GET "/health.check" "HTTP/1.0"
      response_timeout: 15000
      healthy_threshold: 1
  memcached:
    scale: 1
    health_check:
      port: 11211
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
  relcached:
    scale: 1
    health_check:
      port: 11211
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
  postfix:
    scale: 1
    health_check:
      port: 25
      interval: 20000
      initializing_timeout: 90000
      unhealthy_threshold: 3
      strategy: recreate
      response_timeout: 3000
      healthy_threshold: 2
  rabbitmq:
    hostname: ${RABBITMQ_HOST}
